security:
  encoders:
    App\Entity\Backend\Administrators:
      algorithm: auto
    
    App\Entity\Production\Members\Members:
      algorithm: auto
      
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    users_in_memory: { memory: null }
    # used to reload user from session & other features (e.g. switch_user)
    administrators:
      entity:
        class: App\Entity\Backend\Administrators
        property: username

    api_user_provider:
      entity:
        class: App\Entity\Backend\AdministratorsDevices
        property: apiKey

  role_hierarchy:
    ROLE_DEVELOPER: [ROLE_SUPER_ADMIN]
    ROLE_SUPER_ADMIN: [ROLE_ADMIN]
    ROLE_ADMIN: ROLE_USER

  enable_authenticator_manager: true
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false


    admininistrators_area:
      lazy: true
      context: administrators
      pattern: '^/backauth/.*'
      user_checker: App\Security\UserChecker
      logout:
        path: administrators_logout
        target: administrators_logout
      entry_point: App\Security\LoginFormAuthenticator
      custom_authenticators:
        - App\Security\LoginFormAuthenticator
      provider: administrators

    


    api:
      custom_authenticators:
        - App\Security\ApiTokenAuthenticator
      provider: api_user_provider
      pattern: ^/api/auth/.*

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/backauth/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/backauth/efconnect, role: ROLE_ADMIN }
    - { path: ^/backauth/elfinder, role: ROLE_ADMIN }
    - { path: ^/backauth/*, roles: [ROLE_ADMIN] }
    - { path: '^/api/auth/*', roles: [ROLE_ADMIN]  }

